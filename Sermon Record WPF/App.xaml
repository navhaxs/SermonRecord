<Application x:Class="Sermon_Record.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Sermon_Record"
             StartupUri="MainWindow.xaml" Exit="Application_Exit" Startup="Application_Startup" DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>

        <!---->
        <Style x:Key="circlularToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>


                            <Viewbox>
                                <Grid>

                                    <Ellipse x:Name="inside" Width="200" Height="200" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeLineJoin="Round" Opacity="1" Fill="{TemplateBinding Background}"   />
                                    
                                    <Ellipse x:Name="inside_overlay" Width="200" Height="200" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeLineJoin="Round" Opacity="0" Fill="White"   />
                                    <Ellipse x:Name="ellipse" Width="200" Height="200" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeThickness="15" StrokeLineJoin="Round" Opacity="0" Stroke="Black" Fill="#00000000" />


                                </Grid>
                            </Viewbox>

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <!--<Trigger Property="IsDefaulted" Value="True" />-->
        <Trigger Property="IsEnabled" Value="False">
            <Setter TargetName="inside_overlay" Property="Opacity" Value=".4" />
            <Setter TargetName="inside" Property="Fill" >
                <Setter.Value>
                    <SolidColorBrush Color="Gray" />
                </Setter.Value>
            </Setter>

        </Trigger>
        <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="inside_overlay" Property="Opacity" Value=".4" />
            <Setter TargetName="inside" Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Quality"  Color="White" Opacity=".5" />
                </Setter.Value>
            </Setter>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
            <Setter TargetName="inside" Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Quality"  Color="White" Opacity=".75" />
                </Setter.Value>
            </Setter>
            <!--<Setter TargetName="arrow" Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="30" RenderingBias="Quality" />
                                    </Setter.Value>
                                </Setter>-->
        </Trigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
        </Setter>
        </Style>

        <Style x:Key="arrowBack" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>


                            <Viewbox>
                                <Grid>

                                    <Ellipse x:Name="inside" Width="150" Height="150" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeLineJoin="Round" Opacity="1" Fill="White"   />
                                    <!--<Ellipse x:Name="ellipse" Width="200" Height="200" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeThickness="15" StrokeLineJoin="Round" Opacity=".6" Stroke="{TemplateBinding Foreground}" Fill="#00000000" />-->


                                </Grid>
                            </Viewbox>

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="inside" Property="Opacity" Value=".8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="inside" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Quality"  Color="White" Opacity=".75" />
                                    </Setter.Value>
                                </Setter>
                                <!--<Setter TargetName="arrow" Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="30" RenderingBias="Quality" />
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
        x:Key="ButtonFocusVisual">
            <Setter
            Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MetroButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="BorderBrush" Value="#EECCCCCC" />
            <Setter Property="Background" Value="#EECCCCCC"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="OpacityMask" Value="#AA888888"/>
                                <Setter Property="Margin" Value="2 1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#FF7A7A7A" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ProgressBar}" x:Key="progressbarVU">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <Rectangle Name="PART_Track" Stroke="#888888" StrokeThickness="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#FF00FF00"/>
                                        <GradientStop Offset="0.9" Color="#FFFFFF00"/>
                                        <GradientStop Offset="1" Color="#FFFF0000"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <DockPanel Margin="0">
                                <Rectangle Name="PART_Indicator">
                                </Rectangle>
                                <Rectangle Name="Mask" MinHeight="{TemplateBinding Height}" Fill="#C0C0C0"/>
                            </DockPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
